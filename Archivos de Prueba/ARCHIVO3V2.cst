int val_fibo = 0;

Hanoi(int discos, int origen, int auxiliar, int destino) {
    if (discos == 1) {
        Println("Mover disco de " + origen + " a " + destino);
    } else {
        Hanoi(discos - 1, origen, destino, auxiliar);
        Println("Mover disco de " + origen + " a " + destino);
        Hanoi(discos - 1, auxiliar, origen, destino);
    }
}

run Archivo3();


imprimir_fibonacci(int valor) {
    fibonacci(valor);
    Println("Resultado de fibonacci(" + valor + ") = " + val_fibo);
}

fibonacci(int n):void {
    if (n > 1) {
        fibonacci(n - 1);
        fibonacci(n - 2);
    } else if (n == 1) {
        val_fibo = val_fibo + 1;
    } else if (n == 0) {
        val_fibo = val_fibo + 0;
    } else {
        Println("error");
        val_fibo = val_fibo + 0;
    }
}

Archivo3(){
    Println("====================ARCHIVO 3====================");
    Println("***********SECCION DE RECURSIVIDAD***************");
    Println("---------------FUNCION FIBONACCI-----------------");
    imprimir_fibonacci(20);
    Println("-------------------------------------------------");
    Println("----------------TORRES DE HANOI------------------");
    int discos = 3;
    int origen = 1;
    int auxiliar = 2;
    int destino = 3;
    Hanoi(discos, origen, auxiliar, destino);
    Println("-------------------------------------------------");
    Println("*************FIN DE RECURSIVIDAD*****************");
}